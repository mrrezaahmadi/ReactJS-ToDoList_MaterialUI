{"version":3,"sources":["redux/todos/todos.types.js","redux/todos/todos.utils.js","redux/todos/todos.reducer.js","redux/root.reducer.js","redux/store.config.js","components/todos-header/todos-header.component.jsx","redux/todos/todos.selectors.js","redux/todos/todos.actions.js","components/todos-form/todos-form.component.jsx","components/todos-list/todos-list.component.jsx","pages/todos/todos.component.jsx","App.js","serviceWorker.js","index.js"],"names":["addNewItemToList","todosList","title","newItem","id","Date","now","value","status","copyListAndManipulate","instruction","args","item","otherArgs","todosListCopy","index","indexOf","editItemOfList","deleteItemOfList","splice","changeStatusOfItemOfList","INITIAL_STATE","error","edit","todosReducer","state","action","type","types","payload","rootReducer","combineReducers","todos","middleWares","logger","store","createStore","applyMiddleware","useStyles","makeStyles","toolbar","textAlign","height","heading","margin","Header","classes","AppBar","position","Toolbar","className","Typography","variant","align","selectTodos","selectTodosTitle","createSelector","selectTodosEdit","selectTodosError","selectTodosList","setTitle","root","marginTop","marginBottom","padding","boxShadow","button","mapStateToProps","createStructuredSelector","connect","setError","addItem","editItem","Container","maxWidth","Grid","container","alignItems","md","sm","xs","TextField","onChange","event","target","trim","length","helperText","fullWidth","label","multiline","Button","color","onClick","listItemTextChecked","textDecoration","listItemTextUnchecked","setItem","deleteItem","setEdit","setStatus","List","map","ListItem","key","ListItemIcon","Checkbox","checked","handleStatus","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","aria-label","handleEdit","handleDelete","Todo","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.1a3ce081.chunk.js","sourcesContent":["export default {\r\n    ADD_ITEM: 'ADD_ITEM',\r\n    EDIT_ITEM: 'EDIT_ITEM',\r\n    DELETE_ITEM: 'DELETE_ITEM',\r\n    SET_TITLE: 'SET_TITLE',\r\n    SET_ITEM: 'SET_ITEM',\r\n    SET_EDIT: 'SET_EDIT',\r\n    SET_ERROR: 'SET_ERROR',\r\n    SET_STATUS: 'SET_STATUS'\r\n}","const addNewItemToList = (todosList, title) => {\r\n    const newItem = {\r\n        id: Date.now(),\r\n        value: title,\r\n        status: false\r\n    }\r\n\r\n    return [...todosList, newItem]\r\n}\r\n\r\nconst copyListAndManipulate = (instruction, ...args) => {\r\n    const [todosList, item, otherArgs] = args\r\n    let todosListCopy = [...todosList];\r\n    let index = todosListCopy.indexOf(item);\r\n\r\n    if (index > -1) {\r\n        instruction(todosListCopy, index, otherArgs)\r\n        return todosListCopy\r\n    } else {\r\n        return todosList\r\n    }\r\n}\r\n\r\nconst editItemOfList = (todosListCopy, index, title) => {\r\n    todosListCopy[index].value = title;\r\n}\r\n\r\nconst deleteItemOfList = (todosListCopy, index) => {\r\n    todosListCopy.splice(index, 1);\r\n}\r\n\r\nconst changeStatusOfItemOfList = (todosListCopy, index) => {\r\n    todosListCopy[index].status = !todosListCopy[index].status\r\n}\r\n\r\n\r\n\r\n\r\nexport { addNewItemToList, editItemOfList, deleteItemOfList, changeStatusOfItemOfList, copyListAndManipulate }","import types from './todos.types'\r\n\r\nimport { addNewItemToList, editItemOfList, deleteItemOfList, changeStatusOfItemOfList, copyListAndManipulate } from \"./todos.utils\";\r\n\r\nconst INITIAL_STATE = {\r\n    todosList: [],\r\n    // title and item are the title of item before initialize(add) inside the todos list\r\n    title: \"\",\r\n    item: \"\",\r\n    error: \"\",\r\n    edit: false,\r\n}\r\nconst todosReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case types.ADD_ITEM:\r\n            return {\r\n                ...state,\r\n                todosList: addNewItemToList(state.todosList, state.title),\r\n                title: \"\",\r\n                error: \"\"\r\n            }\r\n\r\n        case types.EDIT_ITEM:\r\n            return {\r\n                ...state,\r\n                todosList: copyListAndManipulate(editItemOfList, state.todosList, state.item, state.title),\r\n                title: \"\",\r\n                error: \"\",\r\n                edit: false,\r\n            }\r\n\r\n        case types.DELETE_ITEM:\r\n            return {\r\n                ...state,\r\n                todosList: copyListAndManipulate(deleteItemOfList, state.todosList, state.item)\r\n            }\r\n        case types.SET_TITLE:\r\n            return {\r\n                ...state,\r\n                title: action.payload\r\n            }\r\n        case types.SET_ITEM:\r\n            return {\r\n                ...state,\r\n                item: action.payload,\r\n                error: \"\"\r\n            }\r\n        case types.SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case types.SET_EDIT:\r\n            return {\r\n                ...state,\r\n                edit: !state.edit,\r\n                error: \"\"\r\n            }\r\n        case types.SET_STATUS:\r\n            return {\r\n                ...state,\r\n                todosList: copyListAndManipulate(changeStatusOfItemOfList, state.todosList, state.item),\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default todosReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport todosReducer from './todos/todos.reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    todos: todosReducer\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\n\r\nimport rootReducer from './root.reducer'\r\n\r\nconst middleWares = [logger]\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middleWares))\r\n\r\nexport default store","import React from \"react\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n\ttoolbar: {\r\n\t\ttextAlign: \"center\",\r\n\t\theight: 80,\r\n\t},\r\n\theading: {\r\n\t\tmargin: \"auto\",\r\n\t},\r\n});\r\n\r\nconst Header = () => {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<AppBar position=\"static\">\r\n\t\t\t<Toolbar className={classes.toolbar}>\r\n\t\t\t\t<Typography className={classes.heading} variant=\"h5\" align=\"center\">\r\n\t\t\t\t\tTodo App\r\n\t\t\t\t</Typography>\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst selectTodos = state => state.todos\r\n\r\nexport const selectTodosTitle = createSelector(\r\n    [selectTodos],\r\n    todos => todos.title\r\n)\r\n\r\nexport const selectTodosEdit = createSelector(\r\n    [selectTodos],\r\n    todos => todos.edit\r\n)\r\n\r\nexport const selectTodosError = createSelector(\r\n    [selectTodos],\r\n    todos => todos.error\r\n)\r\n\r\nexport const selectTodosList = createSelector(\r\n    [selectTodos],\r\n    todos => todos.todosList\r\n)","import types from './todos.types'\r\n\r\nexport const addItem = () => ({\r\n    type: types.ADD_ITEM,\r\n})\r\n\r\nexport const deleteItem = () => ({\r\n    type: types.DELETE_ITEM,\r\n})\r\n\r\nexport const editItem = () => ({\r\n    type: types.EDIT_ITEM,\r\n})\r\n\r\nexport const setTitle = (title) => ({\r\n    type: types.SET_TITLE,\r\n    payload: title\r\n})\r\n\r\nexport const setError = (error) => ({\r\n    type: types.SET_ERROR,\r\n    payload: error\r\n})\r\n\r\nexport const setItem = (item) => ({\r\n    type: types.SET_ITEM,\r\n    payload: item\r\n})\r\n\r\nexport const setEdit = () => ({\r\n    type: types.SET_EDIT\r\n})\r\n\r\nexport const setStatus = () => ({\r\n    type: types.SET_STATUS\r\n})","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport {\r\n\tselectTodosTitle,\r\n\tselectTodosError,\r\n\tselectTodosEdit,\r\n} from \"../../redux/todos/todos.selectors\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport {\r\n\tsetTitle,\r\n\taddItem,\r\n\teditItem,\r\n\tsetError,\r\n} from \"../../redux/todos/todos.actions\";\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tmarginTop: 16,\r\n\t\tmarginBottom: 16,\r\n\t\tpadding: 16,\r\n\t\tboxShadow:\r\n\t\t\t\"0px 3px 5px -1px rgba(0,0,0,0.2), 0px 6px 10px 0px rgba(0,0,0,0.14), 0px 1px 18px 0px rgba(0,0,0,0.12)\",\r\n\t},\r\n\tbutton: {\r\n        marginTop: 16,\r\n\t},\r\n});\r\n\r\nconst Form = ({\r\n\ttitle,\r\n\tedit,\r\n\terror,\r\n\tsetTitle,\r\n\taddItem,\r\n\teditItem,\r\n\tsetError,\r\n}) => {\r\n    const classes = useStyles();\r\n    \r\n\tconst handleChange = (event) => {\r\n\t\tconst title = event.target.value;\r\n\r\n\t\tsetTitle(title);\r\n\t\tif (title.trim().length === 0) {\r\n\t\t\tsetError(\"Please enter title\");\r\n\t\t} else {\r\n\t\t\tsetError(\"\");\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleClick = () => {\r\n\t\tif (title.trim().length === 0) {\r\n\t\t\tsetError(\"Please enter title\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tedit ? editItem() : addItem();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container maxWidth=\"sm\" className={classes.root}>\r\n\t\t\t<Grid container alignItems=\"center\">\r\n\t\t\t\t<Grid item md={12} sm={12} xs={8}>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\terror={!!error}\r\n\t\t\t\t\t\thelperText={error}\r\n\t\t\t\t\t\tid=\"outlined-basic\"\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tlabel=\"What You Want To Do?!\"\r\n\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item md={12} sm={12} xs={4}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{edit ? <EditIcon /> : <AddIcon />}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\ttitle: selectTodosTitle,\r\n\tedit: selectTodosEdit,\r\n\terror: selectTodosError,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n\tsetTitle,\r\n\tsetError,\r\n\taddItem,\r\n\teditItem,\r\n})(Form);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport {\r\n\tselectTodosEdit,\r\n\tselectTodosList,\r\n} from \"../../redux/todos/todos.selectors\";\r\n\r\nimport {\r\n\tsetTitle,\r\n\tsetItem,\r\n\tsetEdit,\r\n\tdeleteItem,\r\n\tsetStatus,\r\n} from \"../../redux/todos/todos.actions\";\r\n\r\nconst useStyles = makeStyles({\r\n\tcontainer: {\r\n\t\tpadding: 16,\r\n\t},\r\n\tlistItemTextChecked: {\r\n\t\ttextDecoration: \"line-through\",\r\n\t},\r\n\tlistItemTextUnchecked: {\r\n\t\ttextDecoration: \"none\",\r\n\t},\r\n});\r\n\r\nfunction TodoList({\r\n\ttodosList,\r\n\tsetTitle,\r\n\tsetItem,\r\n\tsetEdit,\r\n\tdeleteItem,\r\n\tsetStatus,\r\n}) {\r\n\tconst classes = useStyles();\r\n\r\n\tconst handleEdit = (item) => {\r\n\t\tsetTitle(item.value);\r\n\t\tsetEdit();\r\n\t\tsetItem(item);\r\n\t};\r\n\r\n\tconst handleDelete = (item) => {\r\n\t\tsetItem(item);\r\n\t\tdeleteItem();\r\n\t};\r\n\r\n\tconst handleStatus = (item) => {\r\n\t\tsetItem(item);\r\n\t\tsetStatus();\r\n\t};\r\n\treturn (\r\n\t\t<Container className={classes.container} maxWidth=\"md\">\r\n\t\t\t{!todosList.length ? (\r\n\t\t\t\t<Typography variant=\"h6\" color=\"error\">\r\n\t\t\t\t\tThere is nothing to do!!!\r\n\t\t\t\t</Typography>\r\n\t\t\t) : (\r\n\t\t\t\t<List>\r\n\t\t\t\t\t{todosList.map((item) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<ListItem key={item.id} button>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={item.status}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleStatus(item)}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\t\t\tprimary={item.value}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\t\titem.status\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? classes.listItemTextChecked\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: classes.listItemTextUnchecked\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\tedge=\"end\"\r\n\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"edit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleEdit(item)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<EditIcon />\r\n\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\tedge=\"end\"\r\n\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"delete\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleDelete(item)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</List>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\ttodosList: selectTodosList,\r\n\tedit: selectTodosEdit,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n\tsetTitle,\r\n\tsetItem,\r\n\tdeleteItem,\r\n\tsetEdit,\r\n\tsetStatus,\r\n})(TodoList);\r\n","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Header from \"../../components/todos-header/todos-header.component\";\r\nimport Form from \"../../components/todos-form/todos-form.component\";\r\nimport ToDoList from \"../../components/todos-list/todos-list.component\"\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\ttextAlign: \"center\",\r\n\t\theight: \"100%\",\r\n\t},\r\n});\r\n\r\nfunction Todo() {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Header />\r\n            <Form />\r\n            <ToDoList />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Todo;\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './redux/store.config';\n\nimport Todo from \"./pages/todos/todos.component\";\n\n\nfunction App() {\n  return (\n    <Provider store={store} >\n      <Todo />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}